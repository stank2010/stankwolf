{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["socket","socketIOClient","roleSeq","role","allrole","roleSeq_script","App","state","name","room","Res_eff","IsAlive","rGameEnd","rJumlei","log","rState","lState","aName","Next","IsVote","IsValidate","ls_role","seerEye","res","on","data","room_name","emit","player_name","setState","length","indexOf","window","location","reload","txt","result","message","nameChange","e","target","value","roomChange","eventCreate","eventJoin","eventReady","eventChangeRole","id","parseInt","eventPlayAction","who_name","currentTarget","eventVote","eventValidate","yesno","eventReset","eventDel","myGame","classes","props","preRoom","Grid","item","xs","sm","md","component","Paper","elevation","square","className","paper","Avatar","avatar","Typography","variant","form","noValidate","TextField","onChange","margin","required","fullWidth","label","autoComplete","autoFocus","container","Button","onClick","color","submit","inRoom","Container","papers","map","val","i","Chip","onDelete","icon","Divider","paper2","index","type","InputLabelProps","shrink","size","rState_Role","rState_Effect","split","light","rState_Vote","ButtonGroup","orientation","aria-label","rState_Validate","rState_Result","ghostMode","key","rState_End","this","root","CssBaseline","image","React","Component","withStyles","theme","height","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","spacing","display","flexDirection","alignItems","secondary","main","width","marginTop","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.41698650.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport socketIOClient  from 'socket.io-client';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {  withStyles, styled  } from '@material-ui/core/styles';\n\nimport Chip from '@material-ui/core/Chip';\nimport Container from '@material-ui/core/Container';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport FaceIcon from '@material-ui/icons/Face';\nimport Divider from '@material-ui/core/Divider';\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst style = (theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  paper2: {\n    margin: theme.spacing(1, 1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  papers: {\n    margin: theme.spacing(4, 8),\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});\n\n\nconst  socket = socketIOClient('http://35.247.169.0:8011/');  \nlet roleSeq = [\"werewolf\",\"seer\",\"bodyguard\"];\nlet role = {\"werewolf\":0,\"villager\":0,\"seer\":0,\"bodyguard\":0};\nlet allrole = [\"werewolf\",\"seer\",\"bodyguard\",\"villager\"];\nlet roleSeq_script = [\n\t\"Werewolf : choose player to be eliminate\",\n\t\"Seer : choose player to check werewolf\",\n\t\"Bodyguard : pok pong kai krub?\" \n];\n\n\nclass App extends React.Component {\n\n  state = {\n    name:\"\",\n    room:\"\",\n    role:\"\",\n    Res_eff:\"\",\n    IsAlive:true,\n    rGameEnd:\"who win\",\n    rJumlei:\"\",\n    log:\"default\",\n    rState:\"\", //room state\n    lState:\"select\", //local state\n    aName:[],\n    Next:\"Ready\",\n    IsVote:false,\n    IsValidate:false,\n    ls_role : role,\n    seerEye : \"\"\n  };\n\n\n\n  res = () => {\n/*\n    socket.on('get room',(data)=>{\n      this.setState({Room:data});\n    });\n*/\n    socket.on('change rState',(data)=>{\n      if(data.room_name == this.state.room){\n        if(data.rState != this.state.rState){\n          //console.log(this.state);\n          socket.emit('myStatus',{player_name:this.state.name,room_name:this.state.room});\n          \n          if(data.rState == \"Effect\" || data.rState == \"Result\" || data.rState == \"\"){\n            socket.emit(\"get name\",{room_name:this.state.room});          \n            this.setState({IsVote:false,IsValidate:false}); //adding\n          }\n\n          if(data.rState == \"\"){\n            this.setState({seerEye:\"\"});\n          }\n\n          if(this.state.IsAlive == false){\n            socket.emit('ghost zone',{room_name:this.state.room});         \n          }\n  \n          this.setState({rState:data.rState,log:data.log});\n        }\n        this.setState({Next:\"Ready\"});\n      }\n    });\n    \n    \n    socket.on('get room',(data)=>{\n      //console.log(data);\n    });\n\n    socket.on('get name',(data)=>{\n      if(data.room_name == this.state.room){\n        this.setState({aName:data.aName});\n        if(data.aName.length == 0 || (data.aName.indexOf(this.state.name) == -1 && this.state.rState==\"\" && this.state.lState ==\"inRoom\") )//|| data.aName.indexOf(this.state.name) == -1 )\n          window.location.reload(false); \n      }\n    });\n\n    socket.on('myStatus',(data)=>{\n      this.setState({role:data.role,IsAlive:data.IsAlive});\n    });\n\n    socket.on('roleList',(data)=>{\n      if(data.room_name == this.state.room){\n        this.setState({ls_role:data.role});\n      }\n    });\n\n    socket.on('eye of seer',(data)=>{\n      let txt = data.player_name + \" is \" + data.result;\n      //alert(txt);\n      this.setState({seerEye:txt});\n    });\n\n    socket.on('Effect',(data)=>{\n      if(data.room_name == this.state.room){\n        this.setState({Res_eff:data.res});\n      }\n    });\n\n    socket.on('End game',(data)=>{\n      if(data.room_name == this.state.room){\n        this.setState({rGameEnd:data.message , IsVote:false,IsValidate:false,rJumlei:\"\"});  \n      }\n    });\n  \n    socket.on('Jumlei',(data)=>{\n      if(data.room_name == this.state.room){\n        this.setState({rJumlei:data.player_name});        \n      }\n\n    });\n\n    socket.on('ghost zone',(data)=>{\n      this.setState({log:data.log});\n    });\n  };\n\n  nameChange = (e)=>{\n    this.setState({name:e.target.value});\n  }\n\n  roomChange = (e)=>{\n    this.setState({room:e.target.value});\n  }\n\n  eventCreate = ()=>{\n    socket.emit(\n      \"wolfroom\",\n      {\n        player_name:this.state.name,\n        room_name : this.state.room\n    });\n    \n    //console.log(this.state);\n    socket.emit(\"get name\",{room_name:this.state.room});\n    this.setState({lState:\"inRoom\"});\n  };\n\n  eventJoin = ()=>{\n    socket.emit(\n      \"wolfjoin\",\n      {\n        player_name:this.state.name,\n        room_name : this.state.room\n    });\n\n    socket.emit(\"get name\",{room_name:this.state.room});\n    this.setState({lState:\"inRoom\"});\n  };\n\n  eventReady = (e) => {\n    this.setState({Next:\"Waiting...\"});\n    socket.emit(\"Ready\",{player_name:this.state.name , room_name:this.state.room});\n  }\n\n  eventChangeRole = (e)=>{\n    //console.log(e.target.id,e.target.value);\n    let ls_role = {};\n    ls_role[e.target.id] = (e.target.value == \"\")? 0 : parseInt(e.target.value);\n    socket.emit('roleList',{room_name:this.state.room,role:ls_role});\n  }\n  \n  eventPlayAction = (e)=>{\n    //console.log(\"id\",e.target.id,e.target);\n    socket.emit('playAction',{\n      player_name : this.state.name,\n      room_name   : this.state.room,\n      who_name    : this.state.aName[e.currentTarget.id] // e.target.id -> e.currentTarget.id\n    });\n  }\n\n  eventVote = (e)=>{\n    this.setState({IsVote:true});\n    socket.emit('Vote',{player_name:this.state.name ,room_name:this.state.room ,who_name:e.currentTarget.id  }); // e.target.id -> e.currentTarget.id\n  }\n\n  eventValidate = (e) =>{\n    let yesno = parseInt(e.currentTarget.id); //e.target.id -> e.currentTarget.id\n    this.setState({IsValidate:true});\n    socket.emit('Validate',{player_name:this.state.name,room_name:this.state.room , yesno:yesno});\n  }\n\n  eventReset = (e) => {\n    socket.emit('wolfreset',{room_name:this.state.room });\n    //this.setState({IsVote:false,IsValidate:false});\n  }\n\n  eventDel = (name) => {\n    //console.log(\"key\",e.target.key );\n    socket.emit('delete player',{room_name:this.state.room ,player_name:name });\n  }\n  \n\n  myGame = (rState) => {\n    const { classes } = this.props;\n\n    const preRoom = \n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            S\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n              Stankwolf\n          </Typography>\n          <form className={classes.form} noValidate>\n              <TextField\n                    onChange={this.nameChange}\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    label=\"Your name\"\n                    name=\"name\"\n                    autoComplete=\"name\"\n                    autoFocus\n                />\n                <TextField\n                    onChange={this.roomChange}\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    label=\"Room name\"\n                    name=\"room\"\n                    autoComplete=\"room\"\n                    autoFocus\n                />\n              <Grid container>\n                <Grid item xs>\n                  <Button\n                    onClick={this.eventCreate}\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                  >\n                    Create\n                  </Button>\n                </Grid>\n                <Grid item xs>              \n                  <Button\n                    onClick={this.eventJoin}\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                  >\n                    Join\n                  </Button>\n                </Grid>\n              </Grid>  \n          </form> \n        </div>\n      </Grid>;\n    \n    const inRoom = \n    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <Container>\n          <Typography component=\"h1\" variant=\"h5\">\n              Room : {this.state.room}\n          </Typography>\n          <Typography component=\"h3\" variant=\"h5\">\n              Name : {this.state.name}\n          </Typography>\n\n          <div className={classes.papers}>\n            \n            {this.state.aName.map((val,i)=>{\n                  return(\n                      <Chip id={val} label={val} onDelete={ ()=>this.eventDel(val)} variant=\"outlined\" color=\"secondary\" icon={<FaceIcon />} />\n                  );\n            })}\n          </div>\n          <Divider />          \n          <div className={classes.paper2}>       \n            <form className={classes.form} noValidate>\n                \n                {allrole.map((item,index)=>{\n                  return(\n                    <div className={classes.papers}>\n                      <TextField\n                        id={item}\n                        label={item}\n                        type=\"number\"\n                        InputLabelProps={{\n                          shrink: true,\n                        }}\n                        onChange={this.eventChangeRole}\n                        size=\"small\"\n                      />\n                      <Typography variant=\"subtitle1\">\n                        {this.state.ls_role[item]}\n                      </Typography>\n                    </div>\n                  );\n\n                })}\n                <Button\n                  onClick={this.eventReady}\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                >       \n                  {this.state.Next} \n                </Button>\n            </form>\n          </div>\n        </Container>\n    </Grid>\n\n    const rState_Role = \n    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n      <Container>\n        <Typography component=\"h2\" variant=\"h5\">\n            Name : {this.state.name}\n        </Typography>\n        <Typography component=\"h2\" variant=\"h5\">\n            Role : {this.state.role}\n        </Typography>\n        <Typography component=\"h2\" variant=\"h5\">\n            Status : {(this.state.IsAlive)?\"ยังไม่ตาย\":\"ตาย\"}\n        </Typography>\n        {(this.state.role==\"seer\")?\n          <Typography variant=\"body1\"> \n            Seer message : {this.state.seerEye}\n          </Typography>\n          :<></> \n        }\n        <Divider /> \n        <div className={classes.paper}>\n          <Typography variant=\"body1\">\n            {\n              (this.state.role == this.state.rState)?\n                roleSeq_script[ roleSeq.indexOf(this.state.role) ]\n              :\n              \"รอ \"+this.state.rState\n            }\n          </Typography>\n          <Divider /> \n          {\n            (this.state.role == this.state.rState)?\n              <>\n              {\n              this.state.aName.map((val,i)=>{\n                return(\n                  <Button id={i} color=\"primary\" variant=\"contained\"   size=\"medium\"  onClick={this.eventPlayAction} >\n                    {val}\n                  </Button>\n                  ); //Bug กดไม่ติด\n              })\n              }\n              </>\n            :\n              <Typography component=\"h5\" variant=\"h5\">\n                คุณยังไม่มีอะไรให้ต้องทำ\n              </Typography>\n          }\n        </div>\n      </Container>\n    </Grid>;\n\n    const rState_Effect = \n    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n      <div className={classes.paper}>       \n        <Typography component=\"h1\" variant=\"h5\"> \n          คุณ {this.state.name} เป็น {this.state.role}\n        </Typography>\n\n        <Typography component=\"h1\" variant=\"h5\"> \n            <div>สถานะ {(this.state.IsAlive)?\"ยังไม่ตาย\":\"ตาย\"}</div>\n        </Typography>\n        {(this.state.role==\"seer\")?\n          <Typography variant=\"body1\"> \n            Seer message : {this.state.seerEye}\n          </Typography>\n          :<></> \n        }\n        <Divider />\n        {(this.state.Res_eff==\"\")?<Typography>ไม่มีอะไรเกิดขึ้น</Typography>:<></>}\n        {this.state.Res_eff.split(\"\\n\").map((item)=>{return(<><Typography> {item}  </Typography><Divider light /></> );})}\n        <Typography variant=\"body1\">กรุณากดเพื่อดำเนินการต่อ</Typography>\n        <Button variant=\"contained\" size=\"medium\" color=\"primary\" onClick={this.eventReady} > {this.state.Next} </Button>\n\n      </div>\n    </Grid>;   \n\n    const rState_Vote  =\n    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n      <Container>\n        <Typography component=\"h2\" variant=\"h5\">\n            Name : {this.state.name}\n        </Typography>\n        <Typography component=\"h2\" variant=\"h5\">\n            Role : {this.state.role}\n        </Typography>\n        <Typography component=\"h2\" variant=\"h5\">\n            Status : {(this.state.IsAlive)?\"ยังไม่ตาย\":\"ตาย\"}\n        </Typography>\n        <Divider /> \n        <div className={classes.paper}>\n          <Typography component=\"h5\" variant=\"h5\">\n            คุณคิดว่าใครเป็นหมาป่า?\n          </Typography>\n          <Divider /> \n          { \n            (!this.state.IsVote)?\n              <ButtonGroup\n              orientation=\"vertical\"\n              color=\"primary\"\n              aria-label=\"vertical contained primary button group\"\n              variant=\"contained\"\n              >\n                {this.state.aName.map((val,i)=>{\n                        return(<Button id={val} onClick={this.eventVote} > {val} </Button>);\n                })}\n              </ButtonGroup>\n            :\n              <Typography component=\"h5\" variant=\"h5\">\n                รอคนอื่นโหวตก่อนนะจ่ะ\n              </Typography>\n          }\n        </div>\n      </Container>\n    </Grid>;    \n\n\n    const rState_Validate = \n    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n      <Container>\n        <Typography component=\"h2\" variant=\"h5\">\n            Name : {this.state.name}\n        </Typography>\n        <Typography component=\"h2\" variant=\"h5\">\n            Role : {this.state.role}\n        </Typography>\n        <Typography component=\"h2\" variant=\"h5\">\n            Status : {(this.state.IsAlive)?\"ยังไม่ตาย\":\"ตาย\"}\n        </Typography>\n        <Divider /> \n        <div className={classes.paper}>\n          <Typography component=\"h5\" variant=\"h5\">\n            ยืนยันที่จะโหวตฆ่าจำเลย {this.state.rJumlei} ไหม?\n          </Typography>\n          <Divider /> \n          { (!this.state.IsValidate)?\n            <>\n              <Button   color=\"primary\"   variant=\"contained\"   size=\"medium\"   id=\"1\"   onClick={this.eventValidate}>  YES </Button>\n              <Button   color=\"secondary\" variant=\"contained\"   size=\"medium\"   id=\"-1\"  onClick={this.eventValidate}>  NO  </Button>\n            </>\n            :\n            <Typography component=\"h5\" variant=\"h5\">\n              รอคนอื่นยืนยันแปปนะจ่ะ\n            </Typography>            \n          }\n        </div>\n      </Container>\n    </Grid>;     \n\n    const rState_Result = \n    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n      <div className={classes.paper}>       \n        <Typography component=\"h1\" variant=\"h5\"> \n          คุณ {this.state.name} เป็น {this.state.role}\n        </Typography>\n        <Typography component=\"h1\" variant=\"h5\"> \n            <div>สถานะ {(this.state.IsAlive)?\"ยังไม่ตาย\":\"ตาย\"}</div>\n        </Typography>\n        <Divider />\n        <Typography variant=\"body1\">\n          {this.state.Res_eff}\n        </Typography>\n        <Button color=\"primary\" variant=\"contained\" size=\"medium\" onClick={this.eventReady} > {this.state.Next} </Button>\n      </div>\n    </Grid>;       \n\n    const ghostMode = \n    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n      <div className={classes.paper}>       \n        <Typography component=\"h1\" variant=\"h5\"> \n          คุณ {this.state.name} เป็น {this.state.role}\n        </Typography>\n        <Typography component=\"h1\" variant=\"h5\"> \n          สถานะ {(this.state.IsAlive)?\"ยังไม่ตาย\":\"ตาย\"}\n        </Typography>\n        <Divider />\n        <Typography variant=\"body1\">\n           ผี zone \n        </Typography>\n        <Divider />\n          {this.state.log.split('\\n').map((item,index)=>{ \n            return(\n            <Typography variant=\"body1\" key={index}>  \n              {item} \n            </Typography>\n            ); \n          })}\n\n      </div>\n    </Grid>;         \n\n    const rState_End =\n    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          End\n        </Avatar>\n        <Typography variant=\"h4\">\n            End Game\n        </Typography>\n\n        <Typography variant=\"body1\">\n            Result : {this.state.rGameEnd}\n        </Typography>\n        <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={this.eventReset} color=\"primary\" > \n          {this.state.Next} \n        </Button>\n      </div>\n    </Grid>;\n\n    if(rState == \"\"){\n      if(this.state.lState == \"select\")\n        return(preRoom);\n      else if(this.state.lState == \"inRoom\"){\n        //socket.emit('roleList',{room_name:this.state.room,role:{}}); mai kurn sai wai tong nee\n        return(inRoom);\n      }\n    }else if(rState == \"End\"){\n      return(rState_End);\n    }\n    else if(this.state.IsAlive == false){ //die\n      return(ghostMode);\n    }\n    else if(roleSeq.indexOf(rState) != -1 ){\n      return(rState_Role);\n    }\n    else if(rState == \"Effect\"){\n      return(rState_Effect);\n    }\n    else if(rState == \"Vote\"){\n      return(rState_Vote);\n    }\n    else if(rState == \"Validate\"){\n      return(rState_Validate);\n    }\n    else if(rState == \"Result\"){\n      return(rState_Result );\n    }\n    else { // default\n      return(\n        <div>\n          Hello world , let's fix bug man\n        </div>\n      )\n    }\n  };\n  componentDidMount(){\n    this.res();\n  }\n\n  render(){\n\n    const { classes } = this.props;\n    \n    return(\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\n        {this.myGame(this.state.rState)} \n      </Grid>\n    );\n\n  }\n}\n\nexport default withStyles(style)(App);\n\n\n\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}